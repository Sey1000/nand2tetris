// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux4Way(in=load, sel=address[12..13], a=loadZero, b=loadOne, c=loadTwo, d=loadThree);

    RAM4K(in=in, load=loadZero, address=address[0..11], out=ramZeroOut);
    RAM4K(in=in, load=loadOne, address=address[0..11], out=ramOneOut);
    RAM4K(in=in, load=loadTwo, address=address[0..11], out=ramTwoOut);
    RAM4K(in=in, load=loadThree, address=address[0..11], out=ramThreeOut);

    Mux4Way16(a=ramZeroOut, b=ramOneOut, c=ramTwoOut, d=ramThreeOut, sel=address[12..13], out=out);
}
