// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address, a=loadZero, b=loadOne, c=loadTwo, d=loadThree, e=loadFour, f=loadFive, g=loadSix, h=loadSeven);

    Register(in=in, load=loadZero, out=registerZeroOut);
    Register(in=in, load=loadOne, out=registerOneOut);
    Register(in=in, load=loadTwo, out=registerTwoOut);
    Register(in=in, load=loadThree, out=registerThreeOut);
    Register(in=in, load=loadFour, out=registerFourOut);
    Register(in=in, load=loadFive, out=registerFiveOut);
    Register(in=in, load=loadSix, out=registerSixOut);
    Register(in=in, load=loadSeven, out=registerSevenOut);

    Mux8Way16(a=registerZeroOut, b=registerOneOut, c=registerTwoOut, d=registerThreeOut, e=registerFourOut, f=registerFiveOut, g=registerSixOut, h=registerSevenOut, sel=address, out=out);
}
